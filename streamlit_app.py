# -*- coding: utf-8 -*-
"""streamlit_app.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1sIy73cSMTk6HJE9sI8bDTTKYlBkc1PKh
"""
import spacy
import subprocess

try:
    nlp = spacy.load("pt_core_news_sm")
except OSError:
    subprocess.run(["python", "-m", "spacy", "download", "pt_core_news_sm"])
    nlp = spacy.load("pt_core_news_sm")


import streamlit as st
from scripts.rag_engine import load_rag_engine, reescrever_pergunta

# Inicializa a RAG engine
@st.cache_resource
def iniciar_engine():
    return load_rag_engine("data/chroma_pcdt_openai")

st.set_page_config(page_title="Agente PCDT HIV", layout="centered")
st.title("🤖 Agente PCDT HIV")
st.markdown("Faça perguntas com base no Protocolo Clínico de HIV 2024.")

# Entrada do usuário
pergunta = st.text_input("📌 Sua pergunta:", placeholder="Ex: Quando iniciar TARV em paciente com meningite tuberculosa?")

if pergunta:
    with st.spinner("🔍 Buscando resposta no PCDT..."):
        chain, retriever, _ = iniciar_engine()
        pergunta_reescrita = reescrever_pergunta(pergunta)
        docs = retriever.invoke(pergunta_reescrita)

        if not docs:
            st.warning("⚠️ Nenhum conteúdo relevante foi encontrado no PCDT.")
        else:
            resposta = chain.invoke({
                "context": docs,
                "pergunta": pergunta
            })

            st.success("✅ Resposta baseada no PCDT:")
            st.markdown(resposta)

            with st.expander("📄 Ver chunks utilizados"):
                for i, doc in enumerate(docs):
                    st.markdown(f"**Chunk {i+1}:**\n{doc.page_content[:800]}")